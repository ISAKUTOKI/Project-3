[gd_scene load_steps=12 format=3 uid="uid://crwsqfckfxrt5"]

[ext_resource type="Script" path="res://scripts/card/card.gd" id="1_csq2x"]
[ext_resource type="Texture2D" uid="uid://cv2a6bweh3sas" path="res://icon.svg" id="2_yk8gg"]
[ext_resource type="Material" uid="uid://dctuir8xbav1n" path="res://sources/normal_based_outline.tres" id="3_jhxvp"]
[ext_resource type="Script" path="res://scripts/card/outline_highlighter.gd" id="4_m77ar"]
[ext_resource type="Material" uid="uid://l5ukh1bxw7bd" path="res://sources/card_used_particles.tres" id="5_wvuv8"]

[sub_resource type="StandardMaterial3D" id="StandardMaterial3D_ne5ma"]
render_priority = 1
next_pass = ExtResource("3_jhxvp")
albedo_texture = ExtResource("2_yk8gg")
heightmap_scale = 16.0

[sub_resource type="BoxMesh" id="BoxMesh_8w5yy"]
material = SubResource("StandardMaterial3D_ne5ma")
size = Vector3(0.5, 0.85, 0.01)

[sub_resource type="BoxShape3D" id="BoxShape3D_8d1w4"]
size = Vector3(0.5, 0.85, 0.01)

[sub_resource type="Shader" id="Shader_l3ogi"]
code = "// NOTE: Shader automatically converted from Godot Engine 4.3.stable's StandardMaterial3D.

shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_disabled, unshaded, shadows_disabled, ambient_light_disabled, fog_disabled;

uniform vec4 albedo : source_color;
uniform sampler2D texture_albedo : source_color, filter_linear_mipmap, repeat_enable;
//uniform float point_size : hint_range(0.1, 128.0, 0.1);

uniform float roughness : hint_range(0.0, 1.0);
uniform sampler2D texture_metallic : hint_default_white, filter_linear_mipmap, repeat_enable;
uniform vec4 metallic_texture_channel;
uniform sampler2D texture_roughness : hint_roughness_r, filter_linear_mipmap, repeat_enable;

uniform float specular : hint_range(0.0, 1.0, 0.01);
uniform float metallic : hint_range(0.0, 1.0, 0.01);

uniform vec3 uv1_scale;
uniform vec3 uv1_offset;
//uniform vec3 uv2_scale;
//uniform vec3 uv2_offset;

void vertex() {
	UV = UV * uv1_scale.xy + uv1_offset.xy;
}

void fragment() {
	vec2 base_uv = UV;

	vec4 albedo_tex = texture(texture_albedo, base_uv);
	ALBEDO = albedo.rgb * albedo_tex.rgb;

	float metallic_tex = dot(texture(texture_metallic, base_uv), metallic_texture_channel);
	METALLIC = metallic_tex * metallic;
	SPECULAR = specular;

	vec4 roughness_texture_channel = vec4(1.0, 0.0, 0.0, 0.0);
	float roughness_tex = dot(texture(texture_roughness, base_uv), roughness_texture_channel);
	ROUGHNESS = roughness_tex * roughness;
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_1dknt"]
render_priority = 0
shader = SubResource("Shader_l3ogi")
shader_parameter/albedo = Color(0.939255, 0.887924, 0.770914, 1)
shader_parameter/roughness = 1.0
shader_parameter/metallic_texture_channel = null
shader_parameter/specular = 0.5
shader_parameter/metallic = 0.0
shader_parameter/uv1_scale = Vector3(1, 1, 1)
shader_parameter/uv1_offset = Vector3(0, 0, 0)

[sub_resource type="SphereMesh" id="SphereMesh_w7cy4"]
material = SubResource("ShaderMaterial_1dknt")
radius = 0.03
height = 0.06
radial_segments = 8
rings = 4

[node name="Card" type="StaticBody3D"]
collision_layer = 2
collision_mask = 0
script = ExtResource("1_csq2x")

[node name="View" type="MeshInstance3D" parent="."]
layers = 2
mesh = SubResource("BoxMesh_8w5yy")

[node name="Collider" type="CollisionShape3D" parent="."]
shape = SubResource("BoxShape3D_8d1w4")

[node name="OutlineHighlighter" type="Node" parent="."]
script = ExtResource("4_m77ar")
color = Color(0.858679, 0.749935, 0.655972, 1)
thickness = 1.05

[node name="UsedEffect" type="GPUParticles3D" parent="."]
emitting = false
amount = 20
lifetime = 0.25
one_shot = true
explosiveness = 1.0
process_material = ExtResource("5_wvuv8")
draw_pass_1 = SubResource("SphereMesh_w7cy4")
